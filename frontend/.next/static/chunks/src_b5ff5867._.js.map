{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///app/src/lib/api.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const api = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000/api',\n  withCredentials: true,\n})"],"names":[],"mappings":";;;;AAGW;AAHX;;AAEO,MAAM,MAAM,mJAAK,CAAC,MAAM,CAAC;IAC9B,SAAS,oEAAmC;IAC5C,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///app/src/components/NotificationBell.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useState } from 'react'\nimport { Bell, BellOff } from 'lucide-react'\nimport { api } from '@/lib/api'\n\ninterface Notification {\n  id: number\n  message: string\n  read: boolean\n}\n\nexport default function NotificationBell() {\n  const [notifications, setNotifications] = useState<Notification[]>([])\n\n  useEffect(() => {\n    async function fetchNotifications() {\n      try {\n        // api is an Axios instance.\n        /* ? separates the endpoint path from query parameters.\n\n           unread=true is a key-value pair:\n\n           unread is the name of the filter parameter the backend expects.\n\n           true is the value â€” meaning: return only notifications that\n           are unread. */\n        const res = await api.get('/notifications/?unread=true')\n\n        setNotifications(res.data)\n      } catch (error) {\n        console.error('Failed to fetch notifications', error)\n      }\n    }\n\n    fetchNotifications()\n  }, [])\n\n  const unreadCount = notifications.filter((n) => !n.read).length\n\n  return (\n    <button className=\"relative hover:opacity-80 transition\">\n      {unreadCount > 0 ? (\n        <>\n          <Bell className=\"w-6 h-6 text-gray-700\" />\n          <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs font-semibold rounded-full px-1.5\">\n            {unreadCount}\n          </span>\n        </>\n      ) : (\n        <BellOff className=\"w-6 h-6 text-gray-400\" />\n      )}\n    </button>\n  )\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AACA;;;AAJA;;;;AAYe,SAAS;;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,yKAAQ,EAAiB,EAAE;IAErE,IAAA,0KAAS;sCAAC;YACR,eAAe;gBACb,IAAI;oBACF,4BAA4B;oBAC5B;;;;;;;uBAOe,GACf,MAAM,MAAM,MAAM,2HAAG,CAAC,GAAG,CAAC;oBAE1B,iBAAiB,IAAI,IAAI;gBAC3B,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,iCAAiC;gBACjD;YACF;YAEA;QACF;qCAAG,EAAE;IAEL,MAAM,cAAc,cAAc,MAAM,CAAC,CAAC,IAAM,CAAC,EAAE,IAAI,EAAE,MAAM;IAE/D,qBACE,6LAAC;QAAO,WAAU;kBACf,cAAc,kBACb;;8BACE,6LAAC,6MAAI;oBAAC,WAAU;;;;;;8BAChB,6LAAC;oBAAK,WAAU;8BACb;;;;;;;yCAIL,6LAAC,0NAAO;YAAC,WAAU;;;;;;;;;;;AAI3B;GA1CwB;KAAA","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///app/src/components/Navbar.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { LogOut } from 'lucide-react'\nimport NotificationBell from './NotificationBell'\n\nexport default function Navbar() {\n  const handleLogout = () => {\n    // Replace with actual logout logic\n    console.log('Logging out...')\n  }\n\n  return (\n    <header className=\"flex items-center justify-between px-6 py-4 bg-white border-b border-gray-200 shadow-sm\">\n      <h1 className=\"text-lg font-semibold text-gray-800\">FinTrack Dashboard</h1>\n\n      <div className=\"flex items-center gap-6\">\n        <NotificationBell />\n\n        <button\n          onClick={handleLogout}\n          className=\"flex items-center gap-2 text-sm text-gray-600 hover:text-gray-900\"\n        >\n          <LogOut className=\"w-4 h-4\" />\n          Logout\n        </button>\n      </div>\n    </header>\n  )\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AAJA;;;;AAMe,SAAS;IACtB,MAAM,eAAe;QACnB,mCAAmC;QACnC,QAAQ,GAAG,CAAC;IACd;IAEA,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAEpD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,oJAAgB;;;;;kCAEjB,6LAAC;wBACC,SAAS;wBACT,WAAU;;0CAEV,6LAAC,uNAAM;gCAAC,WAAU;;;;;;4BAAY;;;;;;;;;;;;;;;;;;;AAMxC;KAvBwB","debugId":null}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///app/src/components/Sidebar.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport Link from 'next/link'\nimport {\n  LayoutDashboard,\n  CreditCard,\n  ArrowLeftRight,\n  Leaf,\n  Bell,\n} from 'lucide-react'\n\nconst navItems = [\n  { href: '/', label: 'Dashboard', icon: LayoutDashboard },\n  { href: '/accounts', label: 'Accounts', icon: CreditCard },\n  { href: '/transactions', label: 'Transactions', icon: ArrowLeftRight },\n  { href: '/esg', label: 'ESG', icon: Leaf },\n  { href: '/notifications', label: 'Notifications', icon: Bell },\n]\n\nexport default function Sidebar() {\n  return (\n    <aside className=\"hidden md:flex flex-col w-60 bg-white border-r border-gray-200 shadow-sm\">\n      <div className=\"px-6 py-4 font-semibold text-xl border-b border-gray-100\">\n        FinTrack\n      </div>\n      <nav className=\"flex-1 p-4 space-y-2\">\n        {navItems.map(({ href, label, icon: Icon }) => (\n          <Link\n            key={href}\n            href={href}\n            className=\"flex items-center gap-3 px-3 py-2 rounded-lg text-gray-700 hover:bg-gray-100 hover:text-gray-900 transition\"\n          >\n            <Icon className=\"w-5 h-5\" />\n            <span>{label}</span>\n          </Link>\n        ))}\n      </nav>\n    </aside>\n  )\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;;;;AAYA,MAAM,WAAW;IACf;QAAE,MAAM;QAAK,OAAO;QAAa,MAAM,kPAAe;IAAC;IACvD;QAAE,MAAM;QAAa,OAAO;QAAY,MAAM,mOAAU;IAAC;IACzD;QAAE,MAAM;QAAiB,OAAO;QAAgB,MAAM,mPAAc;IAAC;IACrE;QAAE,MAAM;QAAQ,OAAO;QAAO,MAAM,6MAAI;IAAC;IACzC;QAAE,MAAM;QAAkB,OAAO;QAAiB,MAAM,6MAAI;IAAC;CAC9D;AAEc,SAAS;IACtB,qBACE,6LAAC;QAAM,WAAU;;0BACf,6LAAC;gBAAI,WAAU;0BAA2D;;;;;;0BAG1E,6LAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC;wBAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,IAAI,EAAE;yCACxC,6LAAC,0KAAI;wBAEH,MAAM;wBACN,WAAU;;0CAEV,6LAAC;gCAAK,WAAU;;;;;;0CAChB,6LAAC;0CAAM;;;;;;;uBALF;;;;;;;;;;;;;;;;;AAWjB;KApBwB","debugId":null}}]
}