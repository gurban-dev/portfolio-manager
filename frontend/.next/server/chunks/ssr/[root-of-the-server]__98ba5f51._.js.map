{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///app/src/lib/api.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const api = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000/api',\n  withCredentials: true,\n})"],"names":[],"mappings":";;;;AAAA;;;;;;AAEO,MAAM,MAAM,qHAAK,CAAC,MAAM,CAAC;IAC9B,SAAS,QAAQ,GAAG,CAAC,mBAAmB,IAAI;IAC5C,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///app/src/hooks/useFetch.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { api } from '@/lib/api'\n\nexport function useFetch<T>(endpoint: string) {\n  const [data, setData] = useState<T | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    api.get(endpoint)\n      .then(res => setData(res.data))\n      .catch(() => setError(true))\n      .finally(() => setLoading(false))\n  }, [endpoint])\n\n  return { data, loading, error }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;AAEO,SAAS,SAAY,QAAgB;IAC1C,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,+GAAQ,EAAW;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,+GAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,+GAAQ,EAAC;IAEnC,IAAA,gHAAS,EAAC;QACR,iHAAG,CAAC,GAAG,CAAC,UACL,IAAI,CAAC,CAAA,MAAO,QAAQ,IAAI,IAAI,GAC5B,KAAK,CAAC,IAAM,SAAS,OACrB,OAAO,CAAC,IAAM,WAAW;IAC9B,GAAG;QAAC;KAAS;IAEb,OAAO;QAAE;QAAM;QAAS;IAAM;AAChC","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///app/src/features/notifications/NotificationList.tsx"],"sourcesContent":["'use client'\nimport { useFetch } from '@/hooks/useFetch'\nimport { Notification } from '@/lib/types'\n\nexport default function NotificationList() {\n  const { data: notifications, loading, error } = useFetch<Notification[]>('/notifications/')\n\n  if (loading) return <p>Loading notifications...</p>\n  if (error) return <p>Error loading notifications.</p>\n\n  return (\n    <ul className=\"space-y-2\">\n      {notifications?.map(n => (\n        <li key={n.id} className={`p-3 border rounded ${n.is_read ? 'opacity-50' : ''}`}>\n          <p>{n.message}</p>\n          <span className=\"text-xs text-gray-500\">{new Date(n.created_at).toLocaleString()}</span>\n        </li>\n      ))}\n    </ul>\n  )\n}"],"names":[],"mappings":";;;;;AACA;;;;;AADA;;;AAIe,SAAS;IACtB,MAAM,EAAE,MAAM,aAAa,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAA,6HAAQ,EAAiB;IAEzE,IAAI,SAAS,qBAAO,qKAAC;kBAAE;;;;;;IACvB,IAAI,OAAO,qBAAO,qKAAC;kBAAE;;;;;;IAErB,qBACE,qKAAC;QAAG,WAAU;kBACX,eAAe,IAAI,CAAA,kBAClB,qKAAC;gBAAc,WAAW,CAAC,mBAAmB,EAAE,EAAE,OAAO,GAAG,eAAe,IAAI;;kCAC7E,qKAAC;kCAAG,EAAE,OAAO;;;;;;kCACb,qKAAC;wBAAK,WAAU;kCAAyB,IAAI,KAAK,EAAE,UAAU,EAAE,cAAc;;;;;;;eAFvE,EAAE,EAAE;;;;;;;;;;AAOrB","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///app/src/pages/notifications.tsx"],"sourcesContent":["import NotificationList from '@/features/notifications/NotificationList'\n\nexport default function NotificationsPage() {\n  return (\n    <div>\n      <h1 className=\"text-2xl font-bold mb-4\">Notifications</h1>\n      <NotificationList />\n    </div>\n  )\n}"],"names":[],"mappings":";;;;;AAAA;;;;;;;AAEe,SAAS;IACtB,qBACE,qKAAC;;0BACC,qKAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,qKAAC,yJAAgB;;;;;;;;;;;AAGvB","debugId":null}}]
}