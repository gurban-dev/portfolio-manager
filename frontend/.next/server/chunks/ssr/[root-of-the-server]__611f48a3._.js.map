{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///app/src/lib/api.ts"],"sourcesContent":["import axios from 'axios'\n\nexport const api = axios.create({\n  baseURL: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000/api',\n\n  /* withCredentials: true ensures that session cookies\n     are sent to Django with every request. */\n  withCredentials: true,\n})"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,MAAM,gJAAK,CAAC,MAAM,CAAC;IAC9B,SAAS,oEAAmC;IAE5C;4CAC0C,GAC1C,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///app/src/hooks/useAuth.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { api } from '@/lib/api'\n\nexport function useAuth() {\n  const [user, setUser] = useState<any>(null)\n\n  // Indicates auth check done.\n  const [checked, setChecked] = useState(false)\n\n  const fetchUser = async () => {\n    try {\n      // Sends an HTTP GET request to your backend at the endpoint /users/me/.\n\n      // This endpoint returns the currently authenticated user's data:\n      const res = await api.get('/users/me/')\n\n      setUser(res.data)\n    } catch {\n      setUser(null)\n    } finally {\n      setChecked(true)\n    }\n  }\n\n  useEffect(() => {\n    // Django cookie\n    const hasSession = document.cookie.includes('sessionid')\n\n    if (!hasSession) {\n      setUser(null)\n      setChecked(true)\n      return\n    }\n\n    fetchUser()\n  }, [])\n\n  const login = async (credentials: any) => {\n    await api.post('/auth/login/', credentials)\n\n    fetchUser()\n  }\n\n  const logout = async () => {\n    await api.post('/auth/logout/')\n\n    setUser(null)\n  }\n\n  return { user, checked, login, logout }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAM;IAEtC,6BAA6B;IAC7B,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IAEvC,MAAM,YAAY;QAChB,IAAI;YACF,wEAAwE;YAExE,iEAAiE;YACjE,MAAM,MAAM,MAAM,wHAAG,CAAC,GAAG,CAAC;YAE1B,QAAQ,IAAI,IAAI;QAClB,EAAE,OAAM;YACN,QAAQ;QACV,SAAU;YACR,WAAW;QACb;IACF;IAEA,IAAA,kNAAS,EAAC;QACR,gBAAgB;QAChB,MAAM,aAAa,SAAS,MAAM,CAAC,QAAQ,CAAC;QAE5C,IAAI,CAAC,YAAY;YACf,QAAQ;YACR,WAAW;YACX;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO;QACnB,MAAM,wHAAG,CAAC,IAAI,CAAC,gBAAgB;QAE/B;IACF;IAEA,MAAM,SAAS;QACb,MAAM,wHAAG,CAAC,IAAI,CAAC;QAEf,QAAQ;IACV;IAEA,OAAO;QAAE;QAAM;QAAS;QAAO;IAAO;AACxC","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///app/src/components/NotificationBell.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { Bell } from 'lucide-react'\nimport { useAuth } from '@/hooks/useAuth'\nimport { api } from '@/lib/api'\n\nexport default function NotificationBell() {\n  const { user, checked } = useAuth() // `checked` indicates auth check is done\n  const [unreadCount, setUnreadCount] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    // Only fetch notifications if user is logged in and auth check is done\n    if (!checked || !user) return\n\n    const fetchNotifications = async () => {\n      setLoading(true)\n\n      try {\n        // api is an Axios instance.\n        /* ? separates the endpoint path from query parameters.\n\n           unread=true is a key-value pair:\n\n           unread is the name of the filter parameter the backend expects.\n\n           true is the value â€” meaning: return only notifications that\n           are unread. */\n        const res = await api.get('/notifications/?unread=true')\n\n        setUnreadCount(res.data.length)\n      } catch (err: any) {\n        console.error('Failed to fetch notifications:', err)\n        setError('Unable to load notifications')\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchNotifications()\n\n    // Optional: setup polling or WebSocket for real-time notifications\n    // const interval = setInterval(fetchNotifications, 60000)\n    // return () => clearInterval(interval)\n  }, [user, checked])\n\n  // Render nothing if user not logged in\n  if (!checked || !user) return null\n\n  return (\n    <div className=\"relative\">\n      <Bell className=\"w-6 h-6 text-gray-700 hover:text-gray-900 cursor-pointer\" />\n\n      {loading && (\n        <span className=\"absolute -top-1 -right-1 w-3 h-3 bg-gray-400 rounded-full animate-pulse\" />\n      )}\n\n      {unreadCount > 0 && !loading && (\n        <span className=\"absolute -top-1 -right-1 w-4 h-4 bg-red-500 text-white rounded-full flex items-center justify-center text-xs font-bold\">\n          {unreadCount > 9 ? '9+' : unreadCount}\n        </span>\n      )}\n\n      {error && (\n        <p className=\"text-xs text-red-500 absolute mt-6\">{error}</p>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,kIAAO,IAAG,yCAAyC;;IAC7E,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAElD,IAAA,kNAAS,EAAC;QACR,uEAAuE;QACvE,IAAI,CAAC,WAAW,CAAC,MAAM;QAEvB,MAAM,qBAAqB;YACzB,WAAW;YAEX,IAAI;gBACF,4BAA4B;gBAC5B;;;;;;;uBAOe,GACf,MAAM,MAAM,MAAM,wHAAG,CAAC,GAAG,CAAC;gBAE1B,eAAe,IAAI,IAAI,CAAC,MAAM;YAChC,EAAE,OAAO,KAAU;gBACjB,QAAQ,KAAK,CAAC,kCAAkC;gBAChD,SAAS;YACX,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IAEA,mEAAmE;IACnE,0DAA0D;IAC1D,uCAAuC;IACzC,GAAG;QAAC;QAAM;KAAQ;IAElB,uCAAuC;IACvC,IAAI,CAAC,WAAW,CAAC,MAAM,OAAO;IAE9B,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,0MAAI;gBAAC,WAAU;;;;;;YAEf,yBACC,8OAAC;gBAAK,WAAU;;;;;;YAGjB,cAAc,KAAK,CAAC,yBACnB,8OAAC;gBAAK,WAAU;0BACb,cAAc,IAAI,OAAO;;;;;;YAI7B,uBACC,8OAAC;gBAAE,WAAU;0BAAsC;;;;;;;;;;;;AAI3D","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///app/src/components/Navbar.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport { LogOut } from 'lucide-react'\nimport { useAuth } from '@/hooks/useAuth'\nimport Link from 'next/link'\nimport NotificationBell from './NotificationBell'\n\nexport default function Navbar() {\n  const { user, checked, logout } = useAuth()\n\n  return (\n    <header className=\"flex items-center justify-between px-6 py-4 bg-white border-b border-gray-200 shadow-sm\">\n      <h1 className=\"text-lg font-semibold text-gray-800\">FinTrack Dashboard</h1>\n        <nav className=\"flex justify-between items-center px-8 py-4 shadow-sm bg-white/70 backdrop-blur-md\">\n          {/* <h1 className=\"text-2xl font-bold text-slate-800\">FinSight</h1> */}\n\n          <div className=\"flex gap-4 items-center\">\n            {/* If auth check not done yet, show nothing */}\n            {!checked && null}\n\n            {/* Logged-out links */}\n            {checked && !user && (\n              <>\n                <Link\n                  href=\"/auth/login\"\n                  className=\"text-sm font-medium text-gray-700 hover:text-slate-900\"\n                >\n                  Login\n                </Link>\n\n                <Link\n                  href=\"/auth/register\"\n                  className=\"px-4 py-2 rounded-xl bg-slate-800 text-white text-sm font-semibold hover:bg-slate-700 transition-colors\"\n                >\n                  Get Started\n                </Link>\n              </>\n            )}\n\n            {/* Logged-in links */}\n            {checked && user && (\n              <>\n                {/* Only mounts for logged-in users */}\n                <NotificationBell />\n\n                <span className=\"text-sm font-medium text-gray-700\">\n                  Hi, {user.username}\n                </span>\n\n                <button\n                  onClick={logout}\n                  className=\"px-3 py-1 rounded-lg bg-red-500 text-white text-sm font-semibold hover:bg-red-600 transition-colors\"\n                >\n                  <LogOut className=\"w-4 h-4\" />\n                  Logout\n                </button>\n              </>\n            )}\n          </div>\n        </nav>\n    </header>\n  )\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AANA;;;;;;AAQe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,IAAA,kIAAO;IAEzC,qBACE,8OAAC;QAAO,WAAU;;0BAChB,8OAAC;gBAAG,WAAU;0BAAsC;;;;;;0BAClD,8OAAC;gBAAI,WAAU;0BAGb,cAAA,8OAAC;oBAAI,WAAU;;wBAEZ,CAAC,WAAW;wBAGZ,WAAW,CAAC,sBACX;;8CACE,8OAAC,uKAAI;oCACH,MAAK;oCACL,WAAU;8CACX;;;;;;8CAID,8OAAC,uKAAI;oCACH,MAAK;oCACL,WAAU;8CACX;;;;;;;;wBAOJ,WAAW,sBACV;;8CAEE,8OAAC,iJAAgB;;;;;8CAEjB,8OAAC;oCAAK,WAAU;;wCAAoC;wCAC7C,KAAK,QAAQ;;;;;;;8CAGpB,8OAAC;oCACC,SAAS;oCACT,WAAU;;sDAEV,8OAAC,oNAAM;4CAAC,WAAU;;;;;;wCAAY;;;;;;;;;;;;;;;;;;;;;;;;;;AAShD","debugId":null}},
    {"offset": {"line": 388, "column": 0}, "map": {"version":3,"sources":["file:///app/src/components/Sidebar.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport Link from 'next/link'\nimport {\n  LayoutDashboard,\n  CreditCard,\n  ArrowLeftRight,\n  Leaf,\n  Bell,\n} from 'lucide-react'\n\nconst navItems = [\n  { href: '/', label: 'Dashboard', icon: LayoutDashboard },\n  { href: '/accounts', label: 'Accounts', icon: CreditCard },\n  { href: '/transactions', label: 'Transactions', icon: ArrowLeftRight },\n  { href: '/esg', label: 'ESG', icon: Leaf },\n  { href: '/notifications', label: 'Notifications', icon: Bell },\n]\n\nexport default function Sidebar() {\n  return (\n    <aside className=\"hidden md:flex flex-col w-60 bg-white border-r border-gray-200 shadow-sm\">\n      <div className=\"px-6 py-4 font-semibold text-xl border-b border-gray-100\">\n        FinTrack\n      </div>\n      <nav className=\"flex-1 p-4 space-y-2\">\n        {navItems.map(({ href, label, icon: Icon }) => (\n          <Link\n            key={href}\n            href={href}\n            className=\"flex items-center gap-3 px-3 py-2 rounded-lg text-gray-700 hover:bg-gray-100 hover:text-gray-900 transition\"\n          >\n            <Icon className=\"w-5 h-5\" />\n            <span>{label}</span>\n          </Link>\n        ))}\n      </nav>\n    </aside>\n  )\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;;;;AAYA,MAAM,WAAW;IACf;QAAE,MAAM;QAAK,OAAO;QAAa,MAAM,+OAAe;IAAC;IACvD;QAAE,MAAM;QAAa,OAAO;QAAY,MAAM,gOAAU;IAAC;IACzD;QAAE,MAAM;QAAiB,OAAO;QAAgB,MAAM,gPAAc;IAAC;IACrE;QAAE,MAAM;QAAQ,OAAO;QAAO,MAAM,0MAAI;IAAC;IACzC;QAAE,MAAM;QAAkB,OAAO;QAAiB,MAAM,0MAAI;IAAC;CAC9D;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAM,WAAU;;0BACf,8OAAC;gBAAI,WAAU;0BAA2D;;;;;;0BAG1E,8OAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,IAAI,EAAE,iBACxC,8OAAC,uKAAI;wBAEH,MAAM;wBACN,WAAU;;0CAEV,8OAAC;gCAAK,WAAU;;;;;;0CAChB,8OAAC;0CAAM;;;;;;;uBALF;;;;;;;;;;;;;;;;AAWjB","debugId":null}}]
}